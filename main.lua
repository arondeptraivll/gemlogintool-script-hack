--[[
    ==================================================
    --   gemlogin tool by TuanHaii (v9.0 - On-Screen Logger)
    --   - THÊM HỆ THỐNG BẮT LỖI VÀ HIỂN THỊ TRÊN MÀN HÌNH
    --   - Nếu script không tải, một bảng đỏ sẽ hiện ra báo lỗi.
    ==================================================
]]

-- ==================== HỆ THỐNG GHI LOG LỖI TRÊN MÀN HÌNH ====================
local ErrorLoggerGUI = nil

local function logErrorOnScreen(errorMessage)
    if not ErrorLoggerGUI then
        -- Tạo GUI nếu chưa có
        ErrorLoggerGUI = Instance.new("ScreenGui")
        ErrorLoggerGUI.Name = "GemLogin_ErrorLogger"
        ErrorLoggerGUI.ZIndexBehavior = Enum.ZIndexBehavior.Global
        ErrorLoggerGUI.ResetOnSpawn = false

        local ErrorPanel = Instance.new("Frame", ErrorLoggerGUI)
        ErrorPanel.Size = UDim2.new(0, 450, 0, 200)
        ErrorPanel.Position = UDim2.new(0.5, -225, 0.5, -100)
        ErrorPanel.BackgroundColor3 = Color3.fromRGB(45, 35, 35)
        ErrorPanel.BorderColor3 = Color3.fromRGB(200, 50, 50)
        ErrorPanel.BorderSizePixel = 2
        Instance.new("UICorner", ErrorPanel).CornerRadius = UDim.new(0, 8)
        
        -- Cho phép kéo thả bảng lỗi
        local isDragging, dragStart, guiStartPos
        ErrorPanel.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                isDragging = true; startPos = input.Position; guiStartPos = ErrorPanel.Position
                local moveConn = game:GetService("UserInputService").InputChanged:Connect(function(inp) if (inp.UserInputType == Enum.UserInputType.MouseMovement or inp.UserInputType == Enum.UserInputType.Touch) and isDragging then local delta = inp.Position - startPos; ErrorPanel.Position = UDim2.new(guiStartPos.X.Scale, guiStartPos.X.Offset + delta.X, guiStartPos.Y.Scale, guiStartPos.Y.Offset + delta.Y) end end)
                local endConn = game:GetService("UserInputService").InputEnded:Connect(function(inp) if inp.UserInputType == Enum.UserInputType.MouseButton1 or inp.UserInputType == Enum.UserInputType.Touch then isDragging = false; moveConn:Disconnect(); endConn:Disconnect() end end)
            end
        end)
        
        local Title = Instance.new("TextLabel", ErrorPanel)
        Title.Size = UDim2.new(1, 0, 0, 30)
        Title.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        Title.Font = Enum.Font.GothamBold
        Title.Text = "GEMLOGIN TOOL - SCRIPT ERROR"
        Title.TextColor3 = Color3.fromRGB(255, 255, 255)
        Title.TextSize = 16
        Instance.new("UICorner", Title).CornerRadius = UDim.new(0, 6)

        local CloseBtn = Instance.new("TextButton", Title)
        CloseBtn.Size = UDim2.new(0, 25, 0, 25)
        CloseBtn.Position = UDim2.new(1, -30, 0.5, -12.5)
        CloseBtn.BackgroundTransparency = 1; CloseBtn.Font = Enum.Font.GothamBold; CloseBtn.Text = "X"
        CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255); CloseBtn.TextSize = 14
        CloseBtn.MouseButton1Click:Connect(function() ErrorLoggerGUI:Destroy(); ErrorLoggerGUI = nil end)

        local ErrorMessageLabel = Instance.new("TextLabel", ErrorPanel)
        ErrorMessageLabel.Name = "ErrorMessage"
        ErrorMessageLabel.Size = UDim2.new(1, -20, 1, -40)
        ErrorMessageLabel.Position = UDim2.new(0, 10, 0, 30)
        ErrorMessageLabel.BackgroundTransparency = 1
        ErrorMessageLabel.Font = Enum.Font.Code
        ErrorMessageLabel.TextWrapped = true
        ErrorMessageLabel.TextXAlignment = Enum.TextXAlignment.Left
        ErrorMessageLabel.TextYAlignment = Enum.TextYAlignment.Top
        ErrorMessageLabel.TextColor3 = Color3.fromRGB(255, 180, 180)
        ErrorMessageLabel.TextSize = 13

        ErrorLoggerGUI.Parent = game:GetService("CoreGui")
    end
    
    -- Cập nhật và hiển thị lỗi
    local msgLabel = ErrorLoggerGUI:FindFirstChild("ErrorPanel", true):FindFirstChild("ErrorMessage")
    if msgLabel then
        msgLabel.Text = "Lỗi nghiêm trọng đã xảy ra:\n\n" .. tostring(errorMessage)
    end
    ErrorLoggerGUI.Enabled = true
end

-- ===================== BẮT ĐẦU KHỐI LỆNH ĐƯỢC BẢO VỆ =====================
local success, errorMessage = pcall(function()

    -- Toàn bộ mã nguồn từ phiên bản trước (v8.3) sẽ được dán vào đây.
    pcall(function() game:GetService("CoreGui").gemlogin_tool:Destroy() end)
    
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")
    local TweenService = game:GetService("TweenService")
    local Players = game:GetService("Players")

    local LocalPlayer = Players.LocalPlayer
    local isNoclipEnabled, isMenuVisible, isPlayerListVisible, isTeleporting = false, true, false, false
    local isAutoAttacking = false; local autoAttackTarget = nil; local autoAttackConnection = nil
    local targetPlayer, teleportConnection, bodyPosition = nil, nil, nil
    local isEspEnabled, espConnections = false, {PlayerAdded = nil, PlayerRemoving = nil, CharacterAdded = {}}
    local isAttackListVisible = false
    
    local ScreenGui=Instance.new("ScreenGui",game:GetService("CoreGui"));ScreenGui.Name="gemlogin_tool";ScreenGui.ZIndexBehavior=Enum.ZIndexBehavior.Global;ScreenGui.ResetOnSpawn=false;local MainWindow=Instance.new("CanvasGroup",ScreenGui);MainWindow.Name="MainWindow";MainWindow.BackgroundColor3=Color3.fromRGB(28,28,32);MainWindow.Position=UDim2.new(0.5,-160,0.5,-200);MainWindow.Size=UDim2.new(0,320,0,400);Instance.new("UICorner",MainWindow).CornerRadius=UDim.new(0,8);Instance.new("UIStroke",MainWindow).Color=Color3.fromRGB(80,80,90);local TitleBar=Instance.new("Frame",MainWindow);TitleBar.Name="TitleBar";TitleBar.BackgroundColor3=Color3.fromRGB(45,45,50);TitleBar.BorderSizePixel=0;TitleBar.Size=UDim2.new(1,0,0,40);Instance.new("UICorner",TitleBar).CornerRadius=UDim.new(0,8);local TitleLabel=Instance.new("TextLabel",TitleBar);TitleLabel.Name="TitleLabel";TitleLabel.BackgroundTransparency=1;TitleLabel.Position=UDim2.new(0.05,0,0,0);TitleLabel.Size=UDim2.new(0.6,0,1,0);TitleLabel.Font=Enum.Font.GothamSemibold;TitleLabel.Text="gemlogin tool";TitleLabel.TextColor3=Color3.fromRGB(255,255,255);TitleLabel.TextSize=18;TitleLabel.TextXAlignment=Enum.TextXAlignment.Left;local CreatorLabel=Instance.new("TextLabel",TitleBar);CreatorLabel.BackgroundTransparency=1;CreatorLabel.Size=UDim2.new(1,-55,1,0);CreatorLabel.Font=Enum.Font.Gotham;CreatorLabel.Text="by TuanHaii";CreatorLabel.TextColor3=Color3.fromRGB(150,150,150);CreatorLabel.TextSize=12;CreatorLabel.TextXAlignment=Enum.TextXAlignment.Right;local CloseButton=Instance.new("TextButton",TitleBar);CloseButton.Size=UDim2.new(0,30,0,30);CloseButton.Position=UDim2.new(1,-35,0.5,-15);CloseButton.BackgroundTransparency=1;CloseButton.Font=Enum.Font.GothamBold;CloseButton.Text="X";CloseButton.TextColor3=Color3.fromRGB(200,200,200);CloseButton.TextSize=16;local TabContainer=Instance.new("Frame",MainWindow);TabContainer.Position=UDim2.new(0,0,0,40);TabContainer.Size=UDim2.new(1,0,0,35);TabContainer.BackgroundTransparency=1;TabContainer.BackgroundColor3=Color3.fromRGB(35,35,40);Instance.new("UIListLayout",TabContainer).FillDirection=Enum.FillDirection.Horizontal;Instance.new("UIPadding",TabContainer).PaddingLeft=UDim.new(0,10);local PlayerTabButton=Instance.new("TextButton",TabContainer);PlayerTabButton.Name="PlayerTab";PlayerTabButton.Size=UDim2.new(0,80,1,0);PlayerTabButton.BackgroundColor3=Color3.fromRGB(60,60,70);PlayerTabButton.Text="Player";PlayerTabButton.Font=Enum.Font.GothamSemibold;PlayerTabButton.TextSize=14;PlayerTabButton.TextColor3=Color3.fromRGB(255,255,255);Instance.new("UICorner",PlayerTabButton).CornerRadius=UDim.new(0,5);local ESPTabButton=Instance.new("TextButton",TabContainer);ESPTabButton.Name="ESPTab";ESPTabButton.Size=UDim2.new(0,80,1,0);ESPTabButton.BackgroundColor3=Color3.fromRGB(40,40,45);ESPTabButton.Text="ESP";ESPTabButton.Font=Enum.Font.GothamSemibold;ESPTabButton.TextSize=14;ESPTabButton.TextColor3=Color3.fromRGB(180,180,180);Instance.new("UICorner",ESPTabButton).CornerRadius=UDim.new(0,5);local PageContainer=Instance.new("Frame",MainWindow);PageContainer.Position=UDim2.new(0,0,0,75);PageContainer.Size=UDim2.new(1,0,1,-85);PageContainer.BackgroundTransparency=1;local PlayerPage=Instance.new("ScrollingFrame",PageContainer);PlayerPage.Name="PlayerPage";PlayerPage.Visible=true;PlayerPage.Size=UDim2.new(1,0,1,0);PlayerPage.BackgroundTransparency=1;PlayerPage.BorderSizePixel=0;PlayerPage.ScrollBarImageColor3=Color3.fromRGB(80,80,90);PlayerPage.ScrollBarThickness=5;local P_ListLayout=Instance.new("UIListLayout",PlayerPage);P_ListLayout.Padding=UDim.new(0,10);P_ListLayout.SortOrder=Enum.SortOrder.LayoutOrder;local P_Padding=Instance.new("UIPadding",PlayerPage);P_Padding.PaddingTop=UDim.new(0,5);P_Padding.PaddingBottom=UDim.new(0,15);P_Padding.PaddingLeft=UDim.new(0,15);P_Padding.PaddingRight=UDim.new(0,15)
    local ESPPage=Instance.new("Frame",PageContainer);ESPPage.Name="ESPPage";ESPPage.Visible=false;ESPPage.Size=UDim2.new(1,0,1,0);ESPPage.BackgroundTransparency=1;local E_Padding=Instance.new("UIPadding",ESPPage);E_Padding.PaddingTop=UDim.new(0,5);E_Padding.PaddingBottom=UDim.new(0,15);E_Padding.PaddingLeft=UDim.new(0,15);E_Padding.PaddingRight=UDim.new(0,15);local ESPButtonContainer=Instance.new("TextButton",ESPPage);ESPButtonContainer.Name="ESPButtonContainer";ESPButtonContainer.BackgroundColor3=Color3.fromRGB(55,55,60);ESPButtonContainer.Size=UDim2.new(1,0,0,40);ESPButtonContainer.Font=Enum.Font.GothamSemibold;ESPButtonContainer.Text="ESP Players";ESPButtonContainer.TextColor3=Color3.fromRGB(225,225,225);ESPButtonContainer.TextSize=15;ESPButtonContainer.TextXAlignment=Enum.TextXAlignment.Left;Instance.new("UIPadding",ESPButtonContainer).PaddingLeft=UDim.new(0,15);Instance.new("UICorner",ESPButtonContainer).CornerRadius=UDim.new(0,6);Instance.new("UIStroke",ESPButtonContainer).Color=Color3.fromRGB(80,80,90);local ESP_ToggleIndicator=Instance.new("Frame",ESPButtonContainer);ESP_ToggleIndicator.BackgroundColor3=Color3.fromRGB(196,70,70);ESP_ToggleIndicator.Position=UDim2.new(1,-55,0.5,-10);ESP_ToggleIndicator.Size=UDim2.new(0,40,0,20);Instance.new("UICorner",ESP_ToggleIndicator).CornerRadius=UDim.new(0,5);local ESP_ToggleCircle=Instance.new("Frame",ESP_ToggleIndicator);ESP_ToggleCircle.BackgroundColor3=Color3.fromRGB(255,255,255);ESP_ToggleCircle.Position=UDim2.new(0,2,0.5,-8);ESP_ToggleCircle.Size=UDim2.new(0,16,0,16);Instance.new("UICorner",ESP_ToggleCircle).CornerRadius=UDim.new(1,0)
    local NoclipButtonContainer=Instance.new("TextButton",PlayerPage);NoclipButtonContainer.LayoutOrder=1;NoclipButtonContainer.BackgroundColor3=Color3.fromRGB(55,55,60);NoclipButtonContainer.Size=UDim2.new(1,0,0,40);NoclipButtonContainer.Font=Enum.Font.GothamSemibold;NoclipButtonContainer.Text="Noclip";NoclipButtonContainer.TextColor3=Color3.fromRGB(225,225,225);NoclipButtonContainer.TextSize=15;NoclipButtonContainer.TextXAlignment=Enum.TextXAlignment.Left;Instance.new("UIPadding",NoclipButtonContainer).PaddingLeft=UDim.new(0,15);Instance.new("UICorner",NoclipButtonContainer).CornerRadius=UDim.new(0,6);Instance.new("UIStroke",NoclipButtonContainer).Color=Color3.fromRGB(80,80,90);local ToggleIndicator=Instance.new("Frame",NoclipButtonContainer);ToggleIndicator.BackgroundColor3=Color3.fromRGB(196,70,70);ToggleIndicator.Position=UDim2.new(1,-55,0.5,-10);ToggleIndicator.Size=UDim2.new(0,40,0,20);Instance.new("UICorner",ToggleIndicator).CornerRadius=UDim.new(0,5);local ToggleCircle=Instance.new("Frame",ToggleIndicator);ToggleCircle.BackgroundColor3=Color3.fromRGB(255,255,255);ToggleCircle.Position=UDim2.new(0,2,0.5,-8);ToggleCircle.Size=UDim2.new(0,16,0,16);Instance.new("UICorner",ToggleCircle).CornerRadius=UDim.new(1,0);local TeleportButton=Instance.new("TextButton",PlayerPage);TeleportButton.LayoutOrder=2;TeleportButton.BackgroundColor3=Color3.fromRGB(55,55,60);TeleportButton.Size=UDim2.new(1,0,0,40);TeleportButton.Font=Enum.Font.GothamSemibold;TeleportButton.Text="Teleport to Player   ▼";TeleportButton.TextColor3=Color3.fromRGB(225,225,225);TeleportButton.TextSize=15;Instance.new("UICorner",TeleportButton).CornerRadius=UDim.new(0,6);Instance.new("UIStroke",TeleportButton).Color=Color3.fromRGB(80,80,90);local SettingsButton=Instance.new("TextButton",PlayerPage);SettingsButton.LayoutOrder=3;SettingsButton.BackgroundColor3=Color3.fromRGB(55,55,60);SettingsButton.Size=UDim2.new(1,0,0,40);SettingsButton.Font=Enum.Font.GothamSemibold;SettingsButton.Text="Player Settings";SettingsButton.TextColor3=Color3.fromRGB(225,225,225);SettingsButton.TextSize=15;Instance.new("UICorner",SettingsButton).CornerRadius=UDim.new(0,6);Instance.new("UIStroke",SettingsButton).Color=Color3.fromRGB(80,80,90);local AutoAttackButton=Instance.new("TextButton",PlayerPage);AutoAttackButton.LayoutOrder=4;AutoAttackButton.BackgroundColor3=Color3.fromRGB(55,55,60);AutoAttackButton.Size=UDim2.new(1,0,0,40);AutoAttackButton.Font=Enum.Font.GothamSemibold;AutoAttackButton.Text="Auto Attack Player   ▼";AutoAttackButton.TextColor3=Color3.fromRGB(225,225,225);AutoAttackButton.TextSize=15;Instance.new("UICorner",AutoAttackButton).CornerRadius=UDim.new(0,6);Instance.new("UIStroke",AutoAttackButton).Color=Color3.fromRGB(80,80,90);local AutoAttackPlayerListFrame=Instance.new("ScrollingFrame",PlayerPage);AutoAttackPlayerListFrame.LayoutOrder=6;AutoAttackPlayerListFrame.Visible=false;AutoAttackPlayerListFrame.BackgroundTransparency=1;AutoAttackPlayerListFrame.BorderSizePixel=0;AutoAttackPlayerListFrame.Size=UDim2.new(1,0,0,0);AutoAttackPlayerListFrame.ClipsDescendants=true;AutoAttackPlayerListFrame.ScrollBarImageColor3=Color3.fromRGB(80,80,90);AutoAttackPlayerListFrame.ScrollBarThickness=5;Instance.new("UIListLayout",AutoAttackPlayerListFrame).Padding=UDim.new(0,5);Instance.new("UIPadding",AutoAttackPlayerListFrame).PaddingTop=UDim.new(0,10);local PlayerListFrame=Instance.new("ScrollingFrame",PlayerPage);PlayerListFrame.LayoutOrder=5;PlayerListFrame.Visible=false;PlayerListFrame.BackgroundTransparency=1;PlayerListFrame.BorderSizePixel=0;PlayerListFrame.Size=UDim2.new(1,0,0,0);PlayerListFrame.ClipsDescendants=true;PlayerListFrame.ScrollBarImageColor3=Color3.fromRGB(80,80,90);PlayerListFrame.ScrollBarThickness=5;Instance.new("UIListLayout",PlayerListFrame).Padding=UDim.new(0,5);Instance.new("UIPadding",PlayerListFrame).PaddingTop=UDim.new(0,10)
    local ToggleBubble=Instance.new("TextButton",ScreenGui);ToggleBubble.Name="ToggleBubble";ToggleBubble.BackgroundColor3=Color3.fromRGB(28,28,32);ToggleBubble.Position=UDim2.new(0.05,0,0.5,-25);ToggleBubble.Size=UDim2.new(0,50,0,50);ToggleBubble.Font=Enum.Font.SourceSans;ToggleBubble.Text="💀";ToggleBubble.TextColor3=Color3.fromRGB(255,255,255);ToggleBubble.TextSize=30;ToggleBubble.Visible=false;Instance.new("UICorner",ToggleBubble).CornerRadius=UDim.new(1,0);Instance.new("UIStroke",ToggleBubble).Color=Color3.fromRGB(80,80,90);local SettingsOverlay=Instance.new("Frame",ScreenGui);SettingsOverlay.Name="SettingsOverlay";SettingsOverlay.Size=UDim2.new(1,0,1,0);SettingsOverlay.BackgroundColor3=Color3.fromRGB(0,0,0);SettingsOverlay.BackgroundTransparency=1;SettingsOverlay.ZIndex=5;SettingsOverlay.Visible=false;local SettingsPanel=Instance.new("Frame",SettingsOverlay);SettingsPanel.Size=UDim2.new(0,400,0,250);SettingsPanel.Position=UDim2.new(0.5,-200,0.5,-125);SettingsPanel.BackgroundColor3=Color3.fromRGB(35,35,45);Instance.new("UICorner",SettingsPanel).CornerRadius=UDim.new(0,8);Instance.new("UIStroke",SettingsPanel).Color=Color3.fromRGB(80,80,90);local SettingsTitle=Instance.new("TextLabel",SettingsPanel);SettingsTitle.Size=UDim2.new(1,0,0,40);SettingsTitle.Font=Enum.Font.GothamBold;SettingsTitle.Text="Player Settings";SettingsTitle.TextColor3=Color3.fromRGB(255,255,255);SettingsTitle.TextSize=18;SettingsTitle.BackgroundTransparency=1;local SettingsCloseBtn=Instance.new("TextButton",SettingsPanel);SettingsCloseBtn.Size=UDim2.new(0,30,0,30);SettingsCloseBtn.Position=UDim2.new(1,-35,0,5);SettingsCloseBtn.BackgroundTransparency=1;SettingsCloseBtn.Font=Enum.Font.GothamBold;SettingsCloseBtn.Text="X";SettingsCloseBtn.TextColor3=Color3.fromRGB(200,200,200);SettingsCloseBtn.TextSize=16;local function createSlider(parent,text,yPos,min,max,valueLabel) local Label=Instance.new("TextLabel",parent);Label.Size=UDim2.new(0.5,0,0,20);Label.Position=UDim2.new(0.05,0,0,yPos);Label.BackgroundTransparency=1;Label.Font=Enum.Font.Gotham;Label.TextColor3=Color3.fromRGB(220,220,220);Label.TextSize=15;Label.Text=text;Label.TextXAlignment=Enum.TextXAlignment.Left;local Value=Instance.new("TextLabel",parent);Value.Size=UDim2.new(0.4,0,0,20);Value.Position=UDim2.new(0.55,0,0,yPos);Value.BackgroundTransparency=1;Value.Font=Enum.Font.GothamBold;Value.TextColor3=Color3.fromRGB(255,255,255);Value.TextSize=15;Value.Text=tostring(valueLabel);Value.TextXAlignment=Enum.TextXAlignment.Right;local Track=Instance.new("TextButton",parent);Track.Text="";Track.AutoButtonColor=false;Track.Size=UDim2.new(0.9,0,0,10);Track.Position=UDim2.new(0.05,0,0,yPos+30);Track.BackgroundColor3=Color3.fromRGB(25,25,30);Instance.new("UICorner",Track).CornerRadius=UDim.new(1,0);local Thumb=Instance.new("Frame",Track);Thumb.Size=UDim2.new(0,16,0,16);Thumb.Position=UDim2.new(0,-8,0.5,-8);Thumb.BackgroundColor3=Color3.fromRGB(100,120,255);Instance.new("UICorner",Thumb).CornerRadius=UDim.new(1,0);Thumb.ZIndex=2;return Track,Thumb,Value end;local SpeedTrack,SpeedThumb,SpeedValue=createSlider(SettingsPanel,"WalkSpeed",50,16,150,16);local JumpTrack,JumpThumb,JumpValue=createSlider(SettingsPanel,"JumpPower",120,50,250,50);local SaveButton=Instance.new("TextButton",SettingsPanel);SaveButton.Size=UDim2.new(0.9,0,0,40);SaveButton.Position=UDim2.new(0.05,0,1,-50);SaveButton.BackgroundColor3=Color3.fromRGB(80,160,80);SaveButton.Font=Enum.Font.GothamBold;SaveButton.Text="Save Settings";SaveButton.TextColor3=Color3.fromRGB(255,255,255);SaveButton.TextSize=16;Instance.new("UICorner",SaveButton).CornerRadius=UDim.new(0,6)

    local function makeDraggable(guiObject) local isDragging; guiObject.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then isDragging = true; local startPos = input.Position; local guiStartPos = guiObject.Parent.Position; local moveConn = UserInputService.InputChanged:Connect(function(inp) if (inp.UserInputType == Enum.UserInputType.MouseMovement or inp.UserInputType == Enum.UserInputType.Touch) and isDragging then local delta = inp.Position - startPos; guiObject.Parent.Position = UDim2.new(guiStartPos.X.Scale, guiStartPos.X.Offset + delta.X, guiStartPos.Y.Scale, guiStartPos.Y.Offset + delta.Y) end end); local endConn = UserInputService.InputEnded:Connect(function(inp) if inp == input then isDragging = false; moveConn:Disconnect(); endConn:Disconnect() end end) end end) end; makeDraggable(TitleBar); makeDraggable(ToggleBubble);local function toggleMenuVisibility() isMenuVisible = not isMenuVisible; local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out); if isMenuVisible then ToggleBubble.Visible = false; MainWindow.Visible = true; TweenService:Create(MainWindow, tweenInfo, {GroupTransparency = 0}):Play() else local tween = TweenService:Create(MainWindow, tweenInfo, {GroupTransparency = 1}); tween:Play(); tween.Completed:Wait(); MainWindow.Visible = false; ToggleBubble.Visible = true end end;local activeTabColor, inactiveTabColor = Color3.fromRGB(60, 60, 70), Color3.fromRGB(40, 40, 45); local activeTextColor, inactiveTextColor = Color3.fromRGB(255,255,255), Color3.fromRGB(180,180,180);local function switchTab(tabButton, pageToShow) for _, btn in pairs(TabContainer:GetChildren()) do if btn:IsA("TextButton") then btn.BackgroundColor3 = inactiveTabColor; btn.TextColor3 = inactiveTextColor end end; for _, page in pairs(PageContainer:GetChildren()) do page.Visible = false end; tabButton.BackgroundColor3 = activeTabColor; tabButton.TextColor3 = activeTextColor; pageToShow.Visible = true end;local attackBodyPosition = nil; local ATTACK_DISTANCE = 2; function stopAutoAttack() if not isAutoAttacking then return end; if autoAttackConnection then autoAttackConnection:Disconnect(); autoAttackConnection = nil end; if attackBodyPosition and attackBodyPosition.Parent then attackBodyPosition:Destroy(); attackBodyPosition = nil end; isAutoAttacking = false; autoAttackTarget = nil; for _, btn in pairs(AutoAttackPlayerListFrame:GetChildren()) do if btn:IsA("TextButton") then btn.BackgroundColor3 = Color3.fromRGB(45, 45, 50) end end; print("TuanHaii: Auto Attack stopped.") end; function startAutoAttack(player) stopAutoAttack(); isAutoAttacking = true; autoAttackTarget = player; print("TuanHaii: Auto Attacking "..player.Name.." at optimal close range."); autoAttackConnection = RunService.Heartbeat:Connect(function() local myChar = LocalPlayer.Character; local targetChar = autoAttackTarget and autoAttackTarget.Character; local myHumanoid = myChar and myChar:FindFirstChildOfClass("Humanoid"); local targetHumanoid = targetChar and targetChar:FindFirstChildOfClass("Humanoid"); if not isAutoAttacking or not targetHumanoid or targetHumanoid.Health <= 0 or not myHumanoid or myHumanoid.Health <= 0 then stopAutoAttack(); return end; local myRoot = myChar:FindFirstChild("HumanoidRootPart"); local targetRoot = targetChar:FindFirstChild("HumanoidRootPart"); if not myRoot or not targetRoot then stopAutoAttack(); return end; if not attackBodyPosition or not attackBodyPosition.Parent then attackBodyPosition = Instance.new("BodyPosition", myRoot); attackBodyPosition.Name = "AutoAttack_BP"; attackBodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge); attackBodyPosition.P = 50000; attackBodyPosition.D = 1250; end; local posBehindTarget = targetRoot.CFrame * CFrame.new(0, 0, ATTACK_DISTANCE); attackBodyPosition.Position = posBehindTarget.Position; myRoot.CFrame = CFrame.lookAt(myRoot.Position, targetRoot.Position); local tool = myChar:FindFirstChildOfClass("Tool"); if tool then task.spawn(function() tool:Activate() end) end end) end; function updateAutoAttackPlayerList() AutoAttackPlayerListFrame:ClearAllChildren(); Instance.new("UIListLayout", AutoAttackPlayerListFrame).Padding = UDim.new(0, 5); Instance.new("UIPadding", AutoAttackPlayerListFrame).PaddingTop = UDim.new(0, 10); for _, player in pairs(Players:GetPlayers()) do if player ~= LocalPlayer then local btn = Instance.new("TextButton", AutoAttackPlayerListFrame); btn.Name = player.Name; btn.Size = UDim2.new(1, -20, 0, 35); btn.Position = UDim2.new(0.5, 0, 0,0); btn.AnchorPoint = Vector2.new(0.5,0); btn.BackgroundColor3 = Color3.fromRGB(45, 45, 50); btn.Font = Enum.Font.Gotham; btn.Text = player.DisplayName; btn.TextColor3 = Color3.fromRGB(200, 200, 200); btn.TextSize = 14; Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6); btn.MouseButton1Click:Connect(function() if autoAttackTarget == player and isAutoAttacking then stopAutoAttack() else startAutoAttack(player); btn.BackgroundColor3 = Color3.fromRGB(200, 50, 50) end end) end end end
    local function createSliderLogic(track, thumb, valueLabel, min, max) local function updateFromInput(input) local trackWidth = track.AbsoluteSize.X; local relativeX = math.clamp(input.Position.X - track.AbsolutePosition.X, 0, trackWidth); local percent = relativeX / trackWidth; local newValue = min + (max - min) * percent; thumb.Position = UDim2.new(percent, -8, 0.5, -8); valueLabel.Text = tostring(math.floor(newValue)) end; track.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then updateFromInput(input); local dragConn, releaseConn; dragConn = UserInputService.InputChanged:Connect(function(inp) if inp.UserInputType == Enum.UserInputType.MouseMovement or inp.UserInputType == Enum.UserInputType.Touch then updateFromInput(inp) end end); releaseConn = UserInputService.InputEnded:Connect(function(inp) if inp.UserInputType == Enum.UserInputType.MouseButton1 or inp.UserInputType == Enum.UserInputType.Touch then dragConn:Disconnect(); releaseConn:Disconnect() end end) end end) end; createSliderLogic(SpeedTrack, SpeedThumb, SpeedValue, 16, 150); createSliderLogic(JumpTrack, JumpThumb, JumpValue, 50, 250);function openPlayerSettings() local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid"); if humanoid then local speedPercent = (humanoid.WalkSpeed - 16) / (150 - 16); SpeedThumb.Position = UDim2.new(speedPercent, -8, 0.5, -8); SpeedValue.Text=tostring(math.floor(humanoid.WalkSpeed)); local jumpPercent = (humanoid.JumpPower - 50) / (250 - 50); JumpThumb.Position = UDim2.new(jumpPercent, -8, 0.5, -8); JumpValue.Text=tostring(math.floor(humanoid.JumpPower)) end; SettingsOverlay.Visible = true; MainWindow.GroupTransparency = 0.5; MainWindow.Active = false end; function closePlayerSettings() SettingsOverlay.Visible = false; MainWindow.GroupTransparency = 0; MainWindow.Active = true end;local function createHighlight(character) if not character or character:FindFirstChild("GemLogin_ESPHighlight") then return end; local h = Instance.new("Highlight", character); h.Name = "GemLogin_ESPHighlight"; h.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop; h.FillColor = Color3.fromRGB(255, 0, 0); h.FillTransparency = 0.5; h.OutlineColor = Color3.fromRGB(255, 255, 255); h.OutlineTransparency = 0 end; local function destroyHighlight(character) if character then local h = character:FindFirstChild("GemLogin_ESPHighlight"); if h then h:Destroy() end end end; local function setupPlayerForESP(player) if player == LocalPlayer then return end; if player.Character then createHighlight(player.Character) end; espConnections.CharacterAdded[player.UserId] = player.CharacterAdded:Connect(createHighlight) end; local function cleanupPlayerFromESP(player) if espConnections.CharacterAdded[player.UserId] then espConnections.CharacterAdded[player.UserId]:Disconnect(); espConnections.CharacterAdded[player.UserId] = nil end; if player.Character then destroyHighlight(player.Character) end end; local function enableESP() if isEspEnabled then return end; isEspEnabled = true; for _, p in pairs(Players:GetPlayers()) do setupPlayerForESP(p) end; espConnections.PlayerAdded = Players.PlayerAdded:Connect(setupPlayerForESP); espConnections.PlayerRemoving = Players.PlayerRemoving:Connect(cleanupPlayerFromESP) end; local function disableESP() if not isEspEnabled then return end; isEspEnabled = false; if espConnections.PlayerAdded then espConnections.PlayerAdded:Disconnect(); espConnections.PlayerAdded = nil end; if espConnections.PlayerRemoving then espConnections.PlayerRemoving:Disconnect(); espConnections.PlayerRemoving = nil end; for _, p in pairs(Players:GetPlayers()) do cleanupPlayerFromESP(p) end end;local function stopTeleport() if teleportConnection then teleportConnection:Disconnect(); teleportConnection = nil end; if bodyPosition and bodyPosition.Parent then bodyPosition:Destroy(); bodyPosition = nil end; isTeleporting = false; targetPlayer = nil; for _, v in pairs(PlayerListFrame:GetChildren()) do if v:IsA("TextButton") then v.BackgroundColor3 = Color3.fromRGB(45, 45, 50) end end end; local function startTeleport(p) local myRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart"); if not p or not p.Character or not p.Character:FindFirstChild("HumanoidRootPart") or not myRoot then print("TuanHaii: Không thể dịch chuyển."); return end; stopTeleport(); isTeleporting = true; targetPlayer = p; bodyPosition = Instance.new("BodyPosition", myRoot); bodyPosition.Name = "GemLogin_BodyPosition"; bodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge); bodyPosition.P = 50000; bodyPosition.D = 1250; teleportConnection = RunService.Heartbeat:Connect(function() if not isTeleporting or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") or not bodyPosition or not bodyPosition.Parent then stopTeleport(); return end; local targetRoot = targetPlayer.Character.HumanoidRootPart; local offset = Vector3.new(0, 10, 0); bodyPosition.Position = targetRoot.Position + offset end) end; local function updatePlayerList() PlayerListFrame:ClearAllChildren(); Instance.new("UIListLayout", PlayerListFrame).Padding = UDim.new(0, 5); Instance.new("UIPadding", PlayerListFrame).PaddingTop = UDim.new(0, 10); for _, player in pairs(Players:GetPlayers()) do if player ~= LocalPlayer then local btn = Instance.new("TextButton", PlayerListFrame); btn.Name = player.Name; btn.Size = UDim2.new(1, -20, 0, 35); btn.Position = UDim2.new(0.5, 0, 0,0); btn.AnchorPoint = Vector2.new(0.5,0); btn.BackgroundColor3 = Color3.fromRGB(45, 45, 50); btn.Font = Enum.Font.Gotham; btn.Text = player.DisplayName; btn.TextColor3 = Color3.fromRGB(200, 200, 200); btn.TextSize = 14; Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6); btn.MouseButton1Click:Connect(function() if targetPlayer == player and isTeleporting then stopTeleport() else startTeleport(player); for _, b in pairs(PlayerListFrame:GetChildren()) do if b:IsA("TextButton") then b.BackgroundColor3 = Color3.fromRGB(45, 45, 50) end end; btn.BackgroundColor3 = Color3.fromRGB(70, 196, 70) end end) end end end; RunService.Heartbeat:Connect(function() if isNoclipEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Running); for _, part in pairs(LocalPlayer.Character:GetDescendants()) do if part:IsA("BasePart") then part.CanCollide = false end end end)
    PlayerTabButton.MouseButton1Click:Connect(function() switchTab(PlayerTabButton, PlayerPage) end); ESPTabButton.MouseButton1Click:Connect(function() switchTab(ESPTabButton, ESPPage) end);SettingsButton.MouseButton1Click:Connect(openPlayerSettings); SettingsCloseBtn.MouseButton1Click:Connect(closePlayerSettings); SaveButton.MouseButton1Click:Connect(function() local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid"); if h then h.WalkSpeed = tonumber(SpeedValue.Text) or 16; h.JumpPower = tonumber(JumpValue.Text) or 50 end; closePlayerSettings() end);NoclipButtonContainer.MouseButton1Click:Connect(function() isNoclipEnabled = not isNoclipEnabled; local t = TweenInfo.new(0.2, Enum.EasingStyle.Quad); if isNoclipEnabled then TweenService:Create(ToggleIndicator, t, {BackgroundColor3 = Color3.fromRGB(70, 196, 70)}):Play(); TweenService:Create(ToggleCircle, t, {Position = UDim2.new(1, -18, 0.5, -8)}):Play() else TweenService:Create(ToggleIndicator, t, {BackgroundColor3 = Color3.fromRGB(196, 70, 70)}):Play(); TweenService:Create(ToggleCircle, t, {Position = UDim2.new(0, 2, 0.5, -8)}):Play(); if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp) end end end);TeleportButton.MouseButton1Click:Connect(function() isAttackListVisible=false; AutoAttackPlayerListFrame.Visible=false; AutoAttackPlayerListFrame.Size=UDim2.new(1,0,0,0); isPlayerListVisible = not isPlayerListVisible; local t = TweenInfo.new(0.3, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out); if isPlayerListVisible then TeleportButton.Text = "Teleport to Player   ▲"; updatePlayerList(); PlayerListFrame.Visible = true; TweenService:Create(PlayerListFrame, t, {Size = UDim2.new(1, 0, 180, 0)}):Play() else TeleportButton.Text = "Teleport to Player   ▼"; stopTeleport(); TweenService:Create(PlayerListFrame, t, {Size = UDim2.new(1, 0, 0, 0)}):Play(); task.wait(0.3); PlayerListFrame.Visible=false end end);AutoAttackButton.MouseButton1Click:Connect(function() isPlayerListVisible=false; PlayerListFrame.Visible=false; PlayerListFrame.Size=UDim2.new(1,0,0,0); isAttackListVisible = not isAttackListVisible; local t = TweenInfo.new(0.3, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out); if isAttackListVisible then AutoAttackButton.Text = "Auto Attack Player   ▲"; updateAutoAttackPlayerList(); AutoAttackPlayerListFrame.Visible=true; TweenService:Create(AutoAttackPlayerListFrame, t, {Size = UDim2.new(1, 0, 180, 0)}):Play() else AutoAttackButton.Text = "Auto Attack Player   ▼"; stopAutoAttack(); TweenService:Create(AutoAttackPlayerListFrame, t, {Size = UDim2.new(1, 0, 0, 0)}):Play(); task.wait(0.3);AutoAttackPlayerListFrame.Visible=false; end end);ESPButtonContainer.MouseButton1Click:Connect(function() local t = TweenInfo.new(0.2, Enum.EasingStyle.Quad); if not isEspEnabled then enableESP(); TweenService:Create(ESP_ToggleIndicator, t, {BackgroundColor3 = Color3.fromRGB(70, 196, 70)}):Play(); TweenService:Create(ESP_ToggleCircle, t, {Position = UDim2.new(1, -18, 0.5, -8)}):Play() else disableESP(); TweenService:Create(ESP_ToggleIndicator, t, {BackgroundColor3 = Color3.fromRGB(196, 70, 70)}):Play(); TweenService:Create(ESP_ToggleCircle, t, {Position = UDim2.new(0, 2, 0.5, -8)}):Play() end end);CloseButton.MouseButton1Click:Connect(toggleMenuVisibility); ToggleBubble.MouseButton1Click:Connect(toggleMenuVisibility);CloseButton.MouseEnter:Connect(function() CloseButton.TextColor3 = Color3.fromRGB(255, 80, 80) end); CloseButton.MouseLeave:Connect(function() CloseButton.TextColor3 = Color3.fromRGB(200, 200, 200) end);Players.PlayerAdded:Connect(function(player) if isPlayerListVisible then wait(0.1); updatePlayerList() end; if isAttackListVisible then wait(0.1); updateAutoAttackPlayerList() end end); Players.PlayerRemoving:Connect(function(player) if targetPlayer == player then stopTeleport() end; if autoAttackTarget == player then stopAutoAttack() end; if isPlayerListVisible then wait(0.1); updatePlayerList() end; if isAttackListVisible then wait(0.1); updateAutoAttackPlayerList() end; end)

end)
-- ===================== KẾT THÚC KHỐI LỆNH ĐƯỢC BẢO VỆ =====================

-- Kiểm tra kết quả và hiển thị lỗi nếu cần
if not success then
    logErrorOnScreen(errorMessage)
else
    print("gemlogin tool by TuanHaii (v9.0 - Error Logger) đã được tải thành công.")
  end
